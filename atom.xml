<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Doesnta's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://doesnta.com/"/>
  <updated>2016-11-06T08:24:41.258Z</updated>
  <id>http://doesnta.com/</id>
  
  <author>
    <name><![CDATA[doesnta]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Leetcode java solution: Single Number]]></title>
    <link href="http://doesnta.com/2016/10/01/Single-Number/"/>
    <id>http://doesnta.com/2016/10/01/Single-Number/</id>
    <published>2016-10-01T11:35:44.000Z</published>
    <updated>2016-11-06T08:24:41.258Z</updated>
    <content type="html"><![CDATA[<p>leetcode question：      </p>
<blockquote>
<p>Given an array of integers, every element appears twice except for one. Find that single one.</p>
<p>Note:<br>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?          </p>
</blockquote>
<p>Solve this problem with HashSet：           </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123; </span><br><span class="line">       HashSet&lt;Integer&gt; set=<span class="keyword">new</span> HashSet&lt;Integer&gt;();</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)&#123;</span><br><span class="line">        <span class="comment">//when num can't add to the set ,it mean the number already existed;</span></span><br><span class="line">           <span class="keyword">if</span>(!set.add(num))&#123;</span><br><span class="line">               set.remove(num);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span>  set.iterator().next();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p><br><br>The more elegant and decant way to solve this problem:            </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123; </span><br><span class="line">      <span class="keyword">int</span> result=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)&#123;</span><br><span class="line">         result=result^num;</span><br><span class="line">       &#125;   </span><br><span class="line">     <span class="keyword">return</span> result;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p><br><br>XOR(^)has the following properties:<br>a^0=a<br>a^a=0</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>leetcode question：      </p>
<blockquote>
<p>Given an array of integers, every element appears twice except for one. Find that single one]]>
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/tags/leetcode/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/categories/leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[科学上网的正确姿势]]></title>
    <link href="http://doesnta.com/2016/05/05/How-to-unblock-the-greatwall/"/>
    <id>http://doesnta.com/2016/05/05/How-to-unblock-the-greatwall/</id>
    <published>2016-05-05T09:38:38.000Z</published>
    <updated>2016-07-03T06:18:53.361Z</updated>
    <content type="html"><![CDATA[<p>大概是去年左右，百度贴吧开始商业化。作为一个大吧的吧主也终于受不了,逃离了百度。那时候插件上网无比简单，红杏还只要8块一个月，轻轻松松就能科学上网。但是好景不长，随着VPN的增多，越来越多人被请去喝茶，墙也在更新后一夜变高。写下这篇文章，给后人乘凉。<br><a id="more"></a></p>
<p><br></p>
<h3 id="免费方案">免费方案</h3><p>缺点：不稳定，有广告，或者需要经常更新密码。</p>
<h4 id="1-shadowsocks（手机+电脑）">1.shadowsocks（手机+电脑）</h4><p>给两个比较靠谱的网站：               </p>
<blockquote>
<p>1.1 <a href="http://www.ishadowsocks.net/" target="_blank" rel="external">http://www.ishadowsocks.net/</a>                            </p>
<p>1.2 <a href="http://freeshadowsocks.cf/" target="_blank" rel="external">http://freeshadowsocks.cf/</a>                      </p>
</blockquote>
<p>这两个网站的密码24小时换一次。比较方便的是1.2的，有二维码。因为如果你下了手机版的ss配套的扫码器，只要扫一下码就可以用了。            </p>
<p>如果你不知道怎么用SS或者没有下载途径的话看这里：<a href="https://ttt.tt/150/" target="_blank" rel="external">https://ttt.tt/150/</a> 如果下载链接被屏蔽，在bing上面搜影梭+安卓或者IPHONE，或者shadowsock+安卓或者IPHONE即可。<br>专用的扫码器在酷安的酷市场可以找到。                      </p>
<h4 id="2-cloudvpn（手机）">2.cloudvpn（手机）</h4><p>目前用过最靠谱的了。之前用蓝灯，还有很多VPN真的一点速度都没有的。这个速度还可以。偶尔会抽筋。                                       </p>
<h4 id="3-赛风_（手机）">3.赛风 （手机）</h4><p>一般，cloudvpn抽风了再用。                </p>
<h4 id="4-V2Ray_和_XX-Net_（电脑）">4.V2Ray 和 XX-Net （电脑）</h4><p>开源的几个翻墙软件都不是很好用。包括蓝灯Lantern。V2ray和XX-net也是开源的。V2是速度不行。xx——net配置特麻烦。有兴趣的自己去试试吧。网址如下：<br><a href="https://www.v2ray.com/" target="_blank" rel="external">https://www.v2ray.com/</a><br><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="external">https://github.com/XX-net/XX-Net</a>                </p>
<p><br></p>
<h3 id="付费方案">付费方案</h3><p>优点：速度稳定。使用方便。                    </p>
<h4 id="1-shadowsocks">1.shadowsocks</h4><p><a href="https://shadowsocks.com/" target="_blank" rel="external">https://shadowsocks.com/</a><br>只有SS连接方式。由shadowsock的原作者经营的，比较靠谱。                  </p>
<h4 id="2-_GreenVPN">2. GreenVPN</h4><p><a href="http://gjsq.me/1438224" target="_blank" rel="external">http://gjsq.me/1438224</a><br>只有VPN连接方式。冒牌太多，个人买过半年的会员，使用感不怎么样，速度太慢，实在对不起这钱。我必须说明一下，VPN在校园网是不可用的。不过也感谢它不能用，我才找到了shadowsocks，速度真的美好多了。     </p>
<h4 id="3-云梯">3.云梯</h4><p><a href="https://www.wildvline.com/" target="_blank" rel="external">https://www.wildvline.com/</a><br>只有VPN连接方式。靠谱。                           </p>
<h4 id="4-云影">4.云影</h4><p><a href="http://www.cloudss.net/" target="_blank" rel="external">http://www.cloudss.net/</a><br>只有SS连接方式。用了很久，系统挺贴心的，可以看剩余流量，还有发票。就是比其他的贵。                           </p>
<h4 id="5-佛跳墙">5.佛跳墙</h4><p><a href="http://www.godusevpn.mobi/" target="_blank" rel="external">http://www.godusevpn.mobi/</a><br>SS和VPN连接方式都有，速度还行。就是系统太不人性化了，打钱之后还要跟客服说才行。有点不放心。                  </p>
<h4 id="6-VPNSO">6.VPNSO</h4><p><a href="https://vpnso.com/main.php" target="_blank" rel="external">https://vpnso.com/main.php</a><br>东哥的VPNSO,靠谱。<br><br><br>这种好东西大家不要声张，自己揣兜里好好享受就好。祝大家每天开心~~~~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>大概是去年左右，百度贴吧开始商业化。作为一个大吧的吧主也终于受不了,逃离了百度。那时候插件上网无比简单，红杏还只要8块一个月，轻轻松松就能科学上网。但是好景不长，随着VPN的增多，越来越多人被请去喝茶，墙也在更新后一夜变高。写下这篇文章，给后人乘凉。<br>]]>
    
    </summary>
    
      <category term="VPN" scheme="http://doesnta.com/tags/VPN/"/>
    
      <category term="shadowsocks" scheme="http://doesnta.com/tags/shadowsocks/"/>
    
      <category term="翻墙" scheme="http://doesnta.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="翻墙" scheme="http://doesnta.com/categories/%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode java solution:Climbing Stairs]]></title>
    <link href="http://doesnta.com/2015/11/06/Climbing-Stairs/"/>
    <id>http://doesnta.com/2015/11/06/Climbing-Stairs/</id>
    <published>2015-11-05T16:31:09.000Z</published>
    <updated>2016-10-01T13:31:19.048Z</updated>
    <content type="html"><![CDATA[<p>leetcode question:            </p>
<blockquote>
<p>You are climbing a stair case. It takes n steps to reach to the top.</p>
<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?                </p>
</blockquote>
<p>Normal and simple way to do this：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbStairsRecur</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;  </span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;  </span><br><span class="line">        <span class="keyword">return</span> climbStairsRecur(n-<span class="number">1</span>) + climbStairsRecur(n-<span class="number">2</span>);  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>But the recursion is too slow,we can use the dynamic programming to make it more efficient.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbingstairs</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">           <span class="keyword">int</span>[] a=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">            a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">            a[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;=n; i++) &#123;</span><br><span class="line">                a[i]=a[i-<span class="number">1</span>]+a[i-<span class="number">2</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a[n]; </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p>
<p>The more space-saving one:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbingstairs</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">           <span class="keyword">int</span>[] a=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">            a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">            a[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;=n; i++) &#123;</span><br><span class="line">                a[i%<span class="number">3</span>]=a[(i-<span class="number">1</span>)%<span class="number">3</span>]+a[(i-<span class="number">2</span>)%<span class="number">3</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a[n%<span class="number">3</span>]; </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p>
<p>Also,if you don’t want to use the array, you can do it with variables.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbingstairs</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(n&lt;<span class="number">4</span>) <span class="keyword">return</span> n;</span><br><span class="line">         <span class="keyword">int</span> a,b=<span class="number">1</span>,c=<span class="number">2</span>;</span><br><span class="line">         a=b+c;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            b=c;</span><br><span class="line">            c=a;</span><br><span class="line">            a=b+c;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> a;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>leetcode question:            </p>
<blockquote>
<p>You are climbing a stair case. It takes n steps to reach to the top.</p>
<p>Each time ]]>
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/tags/leetcode/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/categories/leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode java solution: Roman to Integer]]></title>
    <link href="http://doesnta.com/2015/10/22/Roman-to-Integer/"/>
    <id>http://doesnta.com/2015/10/22/Roman-to-Integer/</id>
    <published>2015-10-22T14:28:58.000Z</published>
    <updated>2015-10-22T15:15:40.282Z</updated>
    <content type="html"><![CDATA[<p>leetcode question:</p>
<blockquote>
<p>Given a roman numeral, convert it to an integer.</p>
<p>Input is guaranteed to be within the range from 1 to 3999.</p>
</blockquote>
<p>we can learn the rule of convert  roman numeral to an integer from <a href="https://en.wikipedia.org/wiki/Roman_numerals" target="_blank" rel="external">wikipedia[Link]</a>.                 </p>
<p>And the following rule is what we need to solve this problem.            </p>
<p>1.when the bigger one on the left side of the small one ,add.<br>2.when the above circumstance was reversed, the big one minus the small one.<br>3.only one numeral being reduced in the left.      </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">romanToInt</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count=chartoInt(s.charAt(<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length()-<span class="number">1</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">int</span> pre=chartoInt(s.charAt(i));</span><br><span class="line">           <span class="keyword">int</span> cur=chartoInt(s.charAt(i+<span class="number">1</span>));</span><br><span class="line">            <span class="keyword">if</span>(pre&gt;=cur)&#123;</span><br><span class="line">                count+=cur;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//Don't forget we assigned the value of count before,so we </span></span><br><span class="line">                <span class="comment">//need to minus two times of pre;And according the rule 3,we</span></span><br><span class="line">                <span class="comment">//don't need to worry about the change of pre;</span></span><br><span class="line">                count=count+cur-<span class="number">2</span>*pre;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">          <span class="keyword">return</span> count;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//revert the char to int;</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">chartoInt</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;   </span><br><span class="line">        <span class="keyword">int</span> data = <span class="number">0</span>;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">switch</span> (c) &#123;  </span><br><span class="line">            <span class="keyword">case</span> <span class="string">'I'</span>:  </span><br><span class="line">                data = <span class="number">1</span>;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">case</span> <span class="string">'V'</span>:  </span><br><span class="line">                data = <span class="number">5</span>;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">case</span> <span class="string">'X'</span>:  </span><br><span class="line">                data = <span class="number">10</span>;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">case</span> <span class="string">'L'</span>:  </span><br><span class="line">                data = <span class="number">50</span>;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">case</span> <span class="string">'C'</span>:  </span><br><span class="line">                data = <span class="number">100</span>;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">case</span> <span class="string">'D'</span>:  </span><br><span class="line">                data = <span class="number">500</span>;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">case</span> <span class="string">'M'</span>:  </span><br><span class="line">                data = <span class="number">1000</span>;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">return</span> data;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>leetcode question:</p>
<blockquote>
<p>Given a roman numeral, convert it to an integer.</p>
<p>Input is guaranteed to be within the range]]>
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/tags/leetcode/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/categories/leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode java solution: Excel Sheet Column Number]]></title>
    <link href="http://doesnta.com/2015/10/16/Excel-Sheet-Column-Number/"/>
    <id>http://doesnta.com/2015/10/16/Excel-Sheet-Column-Number/</id>
    <published>2015-10-16T11:54:45.000Z</published>
    <updated>2015-10-16T12:23:09.917Z</updated>
    <content type="html"><![CDATA[<p>leetcode question:</p>
<blockquote>
<p>Related to question Excel Sheet Column Title</p>
<p>Given a column title as appear in an Excel sheet, return its corresponding column number.                                  </p>
<p>For example:<br>A -&gt; 1<br>B -&gt; 2<br>C -&gt; 3<br>…<br>Z -&gt; 26<br>AA -&gt; 27<br>AB -&gt; 28 </p>
</blockquote>
<p>we can find rule from those example,when it was A,the first element of the alphabet,the output was 1.when it done one loop,the output equal the old output<br>plus 26 and add old output itself.<br><br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">titleToNumber</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> pre=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">           pre=s.charAt(i)-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line">           num=num*<span class="number">26</span>+pre;</span><br><span class="line">         </span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> num;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>leetcode question:</p>
<blockquote>
<p>Related to question Excel Sheet Column Title</p>
<p>Given a column title as appear in an Excel she]]>
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/tags/leetcode/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/categories/leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[genymotion无法拖拽安装apk或者arm的解决方法]]></title>
    <link href="http://doesnta.com/2015/10/14/genymotion-%E6%97%A0%E6%B3%95%E6%8B%96%E6%8B%BD%E5%AE%89%E8%A3%85apk%E6%88%96%E8%80%85arm%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://doesnta.com/2015/10/14/genymotion-无法拖拽安装apk或者arm的解决方法/</id>
    <published>2015-10-14T15:17:50.000Z</published>
    <updated>2015-10-22T14:02:32.548Z</updated>
    <content type="html"><![CDATA[<p>在github下载了几个源码，想放到genymotion看看效果，刚开始时是从eclipse发布失败，上网一查原来是需要安装ARM的解析器。但是发现根本就拖不上去啊。照了网上的方法搞了了半天。还是一个forbidden的图标。后来灵机一动，用自己的渣英语翻译了一下，就在stackoverflow里面找到了答案。<br><a id="more"></a></p>
<blockquote>
<p>步骤一：检查ADB设置，不要用自带，要用默认的，也就是default的tool。              </p>
<p>步骤二：VB盒子的设置里面高级里面的共享粘贴板和拖放改为双向。                       </p>
<p>步骤三：不要以管理员状态运行genymotion，右键属性&gt;兼容性。(之前因为升级WIN10<br>为了兼容性设置了这玩意，实际上不选这个也是可以运行的。)            </p>
<p>步骤四：如果上面的对你不管用。你还可以试试第四个大招。VB设置，共享文件夹。添<br>加一个，选择自动挂载。重启VB就能实现拖放啦。                   </p>
</blockquote>
<p><a href="http://stackoverflow.com/questions/20002138/genymotion-2-0-drag-and-drop" target="_blank" rel="external">stackoverflow问题源地址</a></p>
<blockquote>
<p>所以喽，这件事告诉我们两个道理。<br> 1.谷歌大法好<br> 2.英语不好不可能成为编程大牛       </p>
</blockquote>
<p>努力吧骚年。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在github下载了几个源码，想放到genymotion看看效果，刚开始时是从eclipse发布失败，上网一查原来是需要安装ARM的解析器。但是发现根本就拖不上去啊。照了网上的方法搞了了半天。还是一个forbidden的图标。后来灵机一动，用自己的渣英语翻译了一下，就在stackoverflow里面找到了答案。<br>]]>
    
    </summary>
    
      <category term="android" scheme="http://doesnta.com/tags/android/"/>
    
      <category term="genymotion" scheme="http://doesnta.com/tags/genymotion/"/>
    
      <category term="android" scheme="http://doesnta.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode java solution: Same Tree]]></title>
    <link href="http://doesnta.com/2015/10/08/Same-Tree/"/>
    <id>http://doesnta.com/2015/10/08/Same-Tree/</id>
    <published>2015-10-08T03:18:03.000Z</published>
    <updated>2015-10-22T14:29:41.398Z</updated>
    <content type="html"><![CDATA[<p>leetcode question：</p>
<blockquote>
<p>Given two binary trees, write a function to check if they are equal or not.</p>
<p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.</p>
</blockquote>
<p>The most simple way to do that is recursion,but it’s not the best solution.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for a binary tree node.</span><br><span class="line"> * public class TreeNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     TreeNode left;</span><br><span class="line"> *     TreeNode right;</span><br><span class="line"> *     TreeNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSameTree</span><span class="params">(TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(p==<span class="keyword">null</span>&amp;&amp;q==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">           <span class="keyword">if</span>(p.val==q.val&amp;&amp;</span><br><span class="line">                   isSameTree(p.left,q.left)&amp;&amp;</span><br><span class="line">                   isSameTree(p.right,q.right)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>we can use the java api and the property of queue.following solution is more better .<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSameTree</span><span class="params">(TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">       </span><br><span class="line">        Queue&lt;TreeNode&gt;  left=<span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">        Queue&lt;TreeNode&gt; right=<span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">        left.offer(p);</span><br><span class="line">        right.offer(q);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(!left.isEmpty()&amp;&amp;!right.isEmpty())&#123;</span><br><span class="line">           TreeNode x= left.poll();</span><br><span class="line">           TreeNode y= right.poll();</span><br><span class="line">           <span class="keyword">if</span>(x==<span class="keyword">null</span>&amp;&amp;y==<span class="keyword">null</span>) <span class="keyword">continue</span>;</span><br><span class="line">           <span class="keyword">if</span>(x==<span class="keyword">null</span>||y==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">           <span class="keyword">if</span>(x.val!=y.val) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">           </span><br><span class="line">           left.offer(x.left);right.offer(y.left);</span><br><span class="line">           left.offer(x.right);right.offer(y.right);</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!left.isEmpty()||!right.isEmpty()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>leetcode question：</p>
<blockquote>
<p>Given two binary trees, write a function to check if they are equal or not.</p>
<p>Two binary tree]]>
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/tags/leetcode/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/categories/leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode java solution: Move Zeroes]]></title>
    <link href="http://doesnta.com/2015/10/03/Move-Zeroes/"/>
    <id>http://doesnta.com/2015/10/03/Move-Zeroes/</id>
    <published>2015-10-03T12:20:13.000Z</published>
    <updated>2015-10-03T12:43:31.131Z</updated>
    <content type="html"><![CDATA[<p>leetcode question:</p>
<blockquote>
<p>Given an array nums, write a function to move all 0’s to the end of it while maintaining the relative order of the non-zero elements.</p>
<p>For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].</p>
<p>Note:<br>You must do this in-place without making a copy of the array.<br>Minimize the total number of operations.</p>
</blockquote>
<p>In this question,we need to keep track on the first zero.if we find the non-zero number,we swap it with the first zero.  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveZeroes</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> forezero=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> temp;</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">               <span class="keyword">if</span>(nums[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">                   temp=nums[forezero];</span><br><span class="line">                   nums[forezero]=nums[i];</span><br><span class="line">                   nums[i]=temp;</span><br><span class="line">                   forezero++;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>leetcode question:</p>
<blockquote>
<p>Given an array nums, write a function to move all 0’s to the end of it while maintaining the relat]]>
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/tags/leetcode/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/categories/leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode java solution: Maximum Product Subarray]]></title>
    <link href="http://doesnta.com/2015/09/29/Maximum-Product-Subarray/"/>
    <id>http://doesnta.com/2015/09/29/Maximum-Product-Subarray/</id>
    <published>2015-09-29T10:47:46.000Z</published>
    <updated>2015-09-29T11:09:46.010Z</updated>
    <content type="html"><![CDATA[<p>Leetcode question:        </p>
<blockquote>
<p>Find the contiguous subarray within an array (containing at least one number) which has the largest product.</p>
<p>For example, given the array [2,3,-2,4],<br>the contiguous subarray [2,3] has the largest product = 6.         </p>
</blockquote>
<p>This one was simple,if only you take the negetive number issue into consideration.Following is the solution of java:          </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaximumProductSubarray</span> </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">MaxProduct</span><span class="params">(<span class="keyword">int</span> A[])</span></span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(A.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">              <span class="keyword">int</span> max=A[<span class="number">0</span>];</span><br><span class="line">              <span class="keyword">int</span> min=A[<span class="number">0</span>];</span><br><span class="line">              <span class="comment">//We need keep track on the oldmaxnumber,</span></span><br><span class="line">              <span class="comment">//In case the negetive number break the balance;</span></span><br><span class="line">              <span class="keyword">int</span> oldmax=A[<span class="number">0</span>];</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; A.length; i++) &#123;</span><br><span class="line">                  <span class="comment">//if is the negetive number multiply by the negetive number,</span></span><br><span class="line">                  <span class="comment">//it is possible to be the biggest number;</span></span><br><span class="line">                  max=Math.max(Math.max(A[i],min*A[i]),max*A[i]);</span><br><span class="line">                  min=Math.min(Math.min(A[i], min*A[i]), max*A[i]);</span><br><span class="line">                  oldmax=Math.max(oldmax, max);</span><br><span class="line">            &#125;  </span><br><span class="line">              <span class="keyword">return</span> oldmax;</span><br><span class="line">           &#125;<span class="keyword">else</span></span><br><span class="line">               <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>Leetcode question:        </p>
<blockquote>
<p>Find the contiguous subarray within an array (containing at least one number) which has th]]>
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/tags/leetcode/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/categories/leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode java solution: Majority Element]]></title>
    <link href="http://doesnta.com/2015/09/29/Majority-Element/"/>
    <id>http://doesnta.com/2015/09/29/Majority-Element/</id>
    <published>2015-09-29T09:46:21.000Z</published>
    <updated>2015-10-03T12:41:57.331Z</updated>
    <content type="html"><![CDATA[<p>Leetcode Question:</p>
<blockquote>
<p>Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.</p>
<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>
<p>Credits:<br>Special thanks to @ts for adding this problem and creating all test cases.  </p>
</blockquote>
<p>We have so many way to do with this question,for example,we can use the sorting algorithm,putting the same character to the close distince.And then we can find the majority element by scanning the elements.</p>
<p>But the best solution of this question is Moore Voting algorithm,Time Complexity O(N),Space Complexity O(1).<br>Following is the java solution code:   </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MajorityElement</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Moore Voting algorithm,</span></span><br><span class="line">    <span class="comment">//set the first element candidate,</span></span><br><span class="line">    <span class="comment">//if the next was same with it ,count++,if not,count--;</span></span><br><span class="line">    <span class="comment">//if the count equal 0,set the value of candidate num[i];</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>  candidate=nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span>  count =<span class="number">0</span>;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123; </span><br><span class="line">                   <span class="keyword">if</span>(count==<span class="number">0</span>)&#123;</span><br><span class="line">                       candidate=nums[i];</span><br><span class="line">                       count=<span class="number">1</span>;</span><br><span class="line">                   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                       <span class="keyword">if</span>(candidate==nums[i])&#123;</span><br><span class="line">                           count++;</span><br><span class="line">                       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                           count--;</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">    &#125;</span><br><span class="line">            <span class="keyword">return</span> candidate;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br><br><strong>Official solution and translation:</strong>        </p>
<p>Runtime: O(n2) — Brute force solution: Check each element if it is the majority element.<br>Runtime: O(n), Space: O(n) — Hash table: Maintain a hash table of the counts of each element, then find the most common one.<br>Runtime: O(n log n) — Sorting: Find the longest contiguous identical element in the array after sorting.<br>Average runtime: O(n), Worst case runtime: Infinity — Randomization: Randomly pick an element and check if it is the majority element. If it is not, do the random pick again until you find the majority element. As the probability to pick the majority element is greater than 1/2, the expected number of attempts is &lt; 2.<br>Runtime: O(n log n) — Divide and conquer: Divide the array into two halves, then find the majority element A in the first half and the majority element B in the second half. The global majority element must either be A or B. If A == B, then it automatically becomes the global majority element. If not, then both A and B are the candidates for the majority element, and it is suffice to check the count of occurrences for at most two candidates. The runtime complexity, T(n) = T(n/2) + 2n = O(n logn).<br>Runtime: O(n) — Moore voting algorithm: We maintain a current candidate and a counter initialized to 0. As we iterate the array, we look at the current element x:<br>If the counter is 0, we set the current candidate to x and the counter to 1.<br>If the counter is not 0, we increment or decrement the counter based on whether x is the current candidate.<br>After one pass, the current candidate is the majority element. Runtime complexity = O(n).<br>Runtime: O(n) — Bit manipulation: We would need 32 iterations, each calculating the number of 1’s for the ith bit of all n numbers. Since a majority must exist, therefore, either count of 1’s &gt; count of 0’s or vice versa (but can never be equal). The majority number’s ith bit must be the one bit that has the greater count.<br>时间复杂度: O(n2) — 蛮力法: 依次检查每一个元素是否为众数<br>时间复杂度: O(n), 空间复杂度: O(n) — 哈希表: 维护一个每一个元素出现次数的哈希表, 然后找到出现次数最多的元素<br>时间复杂度: O(n log n) — 排序: 在排序后找出连续重复出现次数最多的元素<br>平均时间复杂度: O(n), 最坏复杂度: 无穷大 — 随机算法: 随机选取一个元素计算其是否为众数. 如果不是, 就重复上一步骤直到找到为止。 由于选出众数的概率 &gt; 1 / 2, 因此期望的尝试次数 &lt; 2<br>时间复杂度: O(n log n) — 分治法: 将数组拆成2半, 然后找出前一半的众数A和后一半的众数B。则全局众数要么是A要么是B。 如果 A == B, 则它自然而然就是全局众数。 如果不是, 则A和B都是候选汇众数, 则至多只需要检查这两个元素的出现次数即可。 时间复杂度, T(n) = T(n/2) + 2n = O(n log n).<br>时间复杂度: O(n) — Moore投票算法: 我们维护一个当前的候选众数和一个初始为0的计数器。遍历数组时，我们看当前的元素x:<br>如果计数器是0, 我们将候选众数置为 x 并将计数器置为 1<br>如果计数器非0, 我们根据x与当前的候选众数是否相等对计数器+1或者-1<br>一趟之后, 当前的候选众数就是所求众数. 时间复杂度 = O(n).<br>时间复杂度: O(n) — 位操作法: 我们需要32次迭代, 每一次计算所有n个数的第i位的1的个数。由于众数一定存在，那么或者1的个数 &gt; 0的个数 或者反过来(但绝不会相同)。 众数的第i位一定是计数较多数字。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Leetcode Question:</p>
<blockquote>
<p>Given an array of size n, find the majority element. The majority element is the element that appe]]>
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/tags/leetcode/"/>
    
      <category term="leetcode" scheme="http://doesnta.com/categories/leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaSSH框架项目经验总结]]></title>
    <link href="http://doesnta.com/2015/09/24/Java-SSH%E6%A1%86%E6%9E%B6%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    <id>http://doesnta.com/2015/09/24/Java-SSH框架项目经验总结/</id>
    <published>2015-09-24T13:41:24.000Z</published>
    <updated>2015-10-15T09:34:50.815Z</updated>
    <content type="html"><![CDATA[<p>做完了好久的SSH项目，一直都忘了给个大总结。懒也罢，忙也罢。今天也是时候好好写写SSH那些事了。虽然草草率率地完成了项目，但是也学到了不少东西，毕竟是自己第一次做框架这么大的SSH项目。 </p>
 <a id="more"></a> 
<p> <br>             </p>
<h2 id="开始做SSH项目需要注意的事">开始做SSH项目需要注意的事</h2><p> <br>   </p>
<h3 id="风格统一，规则统一。">风格统一，规则统一。</h3><blockquote>
<p>1.一定特别注意Spring部分到底使用配置方法还是使用注解方法。两者不得兼得。<br>2.如果数据库有公共表不能使用外键方式操作数据库的，要再三和团队成员确认。<br>3.包,变量,类名都要统一规定。严格执行。会给后面的项目整合带来极大便利。       </p>
</blockquote>
<p>不过我不建议使用公共表。虽然使用公共表，在数据库操作实现上差距不大，（区别就是一个在数据库表中设置了外键，一个没有）,而且数据也是完全可以拿到。(<code>因为hibernate并不关注数据库中你们是否有约束关系，哪怕有，你也可以在配置文件不写</code>)但是好几个部分公用一张表，增加了集成难度。从后期管理数据角度来说，也非常不友好。</p>
<p><br></p>
<h2 id="开始用框架思维思考问题">开始用框架思维思考问题</h2><h3 id="或许你的struts2应该这么写">或许你的struts2应该这么写</h3><p>因为这个项目与各种申请表相关，所以我们在后台一次性要拿到三四十个数据。如果不用框架做的话，可想而知，光是写getParameter都要写多少次。虽然struts有自动赋值的功能，省下了某些同学拿值的时间。但是某些同学就是不珍惜哦。面对一个action要拿到巨量数据的时候，他们反而开始乖乖地一个个地在action里面定义表属性了。       </p>
<blockquote>
<p>以Person表为例，Person里面有七八个属性。要从页面上拿值。有些同学乖乖在页面姓名一栏的name写上Pname，然后在action里面定义private String Pname,如此一来，action第一页就被写满了定义。一张表看起来还好，但如果不只七八个属性呢？如果是近半百的数据量呢？也要一个个地写定义吗？                 </p>
</blockquote>
<p><strong>这压根就不是struts2正确的打开方式！</strong></p>
<p><strong>其实只要在action定义private  Person person，在页面的name中写person.属性名，struts2就会将这个值赋值给person，前提是这个值在Person 实体类中有定义。输出到页面也是如此（数据库有木有它不管）</strong>           </p>
<p><br> </p>
<h3 id="开始用getHibernateTemplate操作数据">开始用getHibernateTemplate操作数据</h3><p>hibernate操作数据库相对于JDBC非常简单。举例说明：        </p>
<blockquote>
<p>想插入一整张Person表的元素，可以直接写this.getHibernateTemplate().save(person);(要继承HibernateDaoSupport) ，如果没有某种方法，可以用Query query=getSession().createQuery()进行操作        </p>
</blockquote>
<p>Hibernate还提供多种操作数据库的方法.(当然，各有优劣)。你可以发挥自己无限的想象力去写数据库语句。比如this.getHibernateTemplate().update(person)是更新操作，但是一般只更新几个字段的话。可以直接用query查询出这张表，然后在其后set相关值就可以更新成功。   </p>
<p><br>     </p>
<h3 id="或许你的hibernate多表连接应该这样写">或许你的hibernate多表连接应该这样写</h3><blockquote>
<p>用SQL写的四表连接，写完就想自杀:                 </p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">P</span> . <span class="keyword">NAME</span>,</span><br><span class="line">  <span class="keyword">P</span> .workadd,</span><br><span class="line">  pp. <span class="keyword">NAME</span>,</span><br><span class="line">  pp.workadd,</span><br><span class="line">  <span class="keyword">l</span>.datetime,</span><br><span class="line">  <span class="keyword">l</span>.donetime,</span><br><span class="line">  s.sname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PERSON <span class="keyword">P</span></span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> PERSON pp <span class="keyword">ON</span> <span class="keyword">P</span> .zjid = pp.zjid</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> LDRK <span class="keyword">l</span> <span class="keyword">ON</span> <span class="keyword">l</span>.ldrkid = pp.zjid</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> SPZT s <span class="keyword">ON</span> s. <span class="keyword">SID</span> = <span class="keyword">l</span>.spztid;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>用hibernate 写同样的操作，如此简单：</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span>  <span class="keyword">distinct</span> <span class="keyword">l</span> <span class="keyword">from</span> Ldrk <span class="keyword">l</span> <span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">l</span>.persons <span class="keyword">p</span> <span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">l</span>.persons pp <span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">l</span>.childrens <span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">l</span>.spzt  s</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<h3 id="在页面中做判断">在页面中做判断</h3><p>如果我们要在页面上把拿到的person的男方部分放在前面，女方部分放在后面。（<code>注意，如果关联两表，hibernate输出位置的前后是随机的</code>）（在传统的JavaBean+Servlet+jsp的模式中，一般都是在Servlet中做判断，再输出到页面相关位置。但是正如我前面说的。取值的方式是在action中定义Person person，输出自然也是person.属性名。而且得到的是List，要在action进行判断并不容易。                 </p>
<p>这时候我们就需要在页面上做判断。下面是一个嵌套循环输出的demo.         </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="title">s:iterator</span> <span class="attribute">value</span>=<span class="value">"ls"</span> <span class="attribute">var</span>=<span class="value">"l"</span> &gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="title">s:iterator</span>  <span class="attribute">value</span>=<span class="value">"persons"</span> <span class="attribute">var</span>=<span class="value">"p"</span> &gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="title">s:if</span> <span class="attribute">test</span>=<span class="value">"gender=='男'.toString()"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">s:property</span> <span class="attribute">value</span>=<span class="value">"name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">s:property</span> <span class="attribute">value</span>=<span class="value">"workadd"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">s:if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">s:iterator</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:iterator</span>  <span class="attribute">value</span>=<span class="value">"persons"</span> <span class="attribute">var</span>=<span class="value">"p"</span> &gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">s:if</span> <span class="attribute">test</span>=<span class="value">"gender=='女'.toString()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">s:property</span> <span class="attribute">value</span>=<span class="value">"name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">s:property</span> <span class="attribute">value</span>=<span class="value">"workadd"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">s:if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">s:iterator</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>不知道大家注意到没有，iterator里面的value都是直接写属性名，而不是l.persons,看见了吗，这可就是ssh框架的优势了呢。(实际上是S标签的优势)                 </p>
<p><br></p>
<h2 id="用SSH框架你的脑子需要更活一点">用SSH框架你的脑子需要更活一点</h2><p><br> </p>
<h3 id="关于hibernate分页的思考">关于hibernate分页的思考</h3><p>因为在做项目的时候，了解到hibernate有两个关于分页的函数。query.setFirstResult();query.setMaxResults();第一个是输出的一个元素，第二个是最多取出多少值。运用这两个函数我们就可以灵活地而简单地操作分页。我谷歌了一下网上有什么用这两个函数做分页的方法（主要是想看有什么我没想到的好方法）。发现大多数人还是用的JavaBean+Servlet+jsp的那套方法做的分页。有些同学甚至连这两个hibernate提供的分页函数都不知道。</p>
<blockquote>
<p>JavaBean+Servlet+jsp分页实体示例：                     </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Page</span> </span>&#123;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">int</span> pageSize;<span class="comment">//页面大小</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">int</span> total;<span class="comment">//总数量</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">int</span> totalPage;<span class="comment">//总共页码</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">int</span> pageIndex;<span class="comment">//当前页码</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">int</span> start;<span class="comment">//当前页起始位置</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">int</span> end;<span class="comment">//当前页结束位置</span></span><br><span class="line">       </span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">Page</span><span class="params">(<span class="keyword">int</span> pageSize,<span class="keyword">int</span> pageIndex,<span class="keyword">int</span> totalPage)</span></span>&#123;</span><br><span class="line">         <span class="keyword">super</span>();</span><br><span class="line">         <span class="keyword">this</span>.pageSize=pageSize;</span><br><span class="line">         <span class="keyword">this</span>.pageIndex=pageIndex;</span><br><span class="line">         <span class="keyword">this</span>.totalPage=totalPage;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pageSize;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(<span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(<span class="keyword">int</span> total)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.total = total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotalPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> total%pageSize==<span class="number">0</span>?total/pageSize:total/pageSize+<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotalPage</span><span class="params">(<span class="keyword">int</span> totalPage)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.totalPage = totalPage;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pageIndex;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageIndex</span><span class="params">(<span class="keyword">int</span> pageIndex)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.pageIndex=pageIndex;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pageIndex = (pageIndex-<span class="number">1</span>)*pageSize-<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStart</span><span class="params">(<span class="keyword">int</span> start)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.start = start;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getEnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pageIndex*pageSize;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnd</span><span class="params">(<span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.end = end;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>数据库操作局部示例：</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PreparedStatement ps = conn.prepareStatement("<span class="operator"><span class="keyword">select</span> ee.* <span class="keyword">from</span> <span class="string">" +</span><br><span class="line">        "</span>(<span class="keyword">select</span> <span class="keyword">e</span>.*,<span class="keyword">rownum</span> r <span class="keyword">from</span> <span class="string">" +</span><br><span class="line">        "</span>(<span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> hiredate) <span class="keyword">e</span> ) ee<span class="string">" +</span><br><span class="line">        "</span> <span class="keyword">where</span> ee.r &gt;=? <span class="keyword">and</span> ee.r&lt;=?<span class="string">");</span><br><span class="line">    ps.setInt(1, start);</span><br><span class="line">    ps.setInt(2, end);</span></span></span><br></pre></td></tr></table></figure>
<p>从上面的实体和数据库操作看来，我们在数据库操作时需要知道页面的第一个值和最后一个值，所以我们在定义page的时候，要知道pageindex和pagesize。（看看getstart和getend函数）count和totalpage是输出到页面和用作判断的条件。但是我们知道hibernate可以用setMaxResult设置一个分页的数据最大值。我们还需要设置end吗？total和totalpage能否可以直接放到action中拿值和做处理呢？  </p>
<p><br>         </p>
<h3 id="如何处理“幽灵数据”">如何处理“幽灵数据”</h3><p>“幽灵数据”是我对那些不跟数据库打交道或者不与数据库有直接关联的数据的戏称。有没有同学做项目的时候很奇怪，为什么要建service和serviceimpl包，除了在分离底层逻辑上的操作步骤之外。service包还有什么效果呢？ </p>
<p>举个例子，购物车中添加的商品需要跟数据库打交道吗？当然不需要，这时候就需要service包的存在了。将购物车的数据在service包管理，隔绝了servlet和jdbc层，后期维护更加简单。同样，SSH中也有处理幽灵数据的时候，这时候就说entity类发挥功效的时候了。<br>在做项目时遇到这么个问题：</p>
<blockquote>
<p>查询功能有个时间约束，大于某某时间和小于某某时间进行查询。但是我们知道数据库里时间属性只有一个，现在要从页面拿两个值，怎么办才好呢？            </p>
</blockquote>
<p>这时候我们可以借助entity类建一个datetime2，但是在xml中不配置此日期。（如果配置了，Hibernate会自动为你在数据库生成这么一个属性）就可以轻易借助entity的外壳拿到页面数据（<code>还记得前面说的person.属性名吗？只要实体中有定义，就可以用这方法拿到值，而不在乎数据库是否有这个属性</code>），并且输送到Dao层。只要在DaoImpl层判断小于小于就行了。是不是很简单呢？      </p>
<p><br></p>
<h2 id="本文总结">本文总结</h2><p>SSH是javaWeb十分常用的三大框架。在企业级应用尤为常见。在大型应用中表现极佳。如果你去找java工作的话，基本上没有不问到SSH框架方面的知识的。Spring方面是SSH框架的重难点，应该多花时间钻研。像aop之类看似简单，但是大多数人只是只知其面，不知其理。当然javaWeb还有springMVC,mybatis等等流行框架，各有优点。在这里就不再深入讨论了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>做完了好久的SSH项目，一直都忘了给个大总结。懒也罢，忙也罢。今天也是时候好好写写SSH那些事了。虽然草草率率地完成了项目，但是也学到了不少东西，毕竟是自己第一次做框架这么大的SSH项目。 </p>]]>
    
    </summary>
    
      <category term="java" scheme="http://doesnta.com/tags/java/"/>
    
      <category term="ssh" scheme="http://doesnta.com/tags/ssh/"/>
    
      <category term="java" scheme="http://doesnta.com/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo一下，你就博客]]></title>
    <link href="http://doesnta.com/2015/09/23/Hexo%E4%B8%80%E4%B8%8B%EF%BC%8C%E4%BD%A0%E5%B0%B1%E5%8D%9A%E5%AE%A2/"/>
    <id>http://doesnta.com/2015/09/23/Hexo一下，你就博客/</id>
    <published>2015-09-23T14:33:25.000Z</published>
    <updated>2015-09-26T15:16:32.935Z</updated>
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;一直苦于自己写的文章无处安放。但是囿于国内技术博客极其美丽和高雅的UI设计，一直不敢踏下那一步。之前就听过可以用github建博客，在网上偶见几个github建博客的教程，收藏了，记着，也念着。但是终究没有时间去做的。<br><a id="more"></a><br>&nbsp;&nbsp;也就上个星期左右吧。忽地鬼迷心窍似的，硬要把这个个人博客搞出来不可。不搞出来还真不行了。<br>风风火火地就把以前收藏的好家伙都亮出来。照着HEXO的教程圆润地做起来。期间遇到了两个千年都遇不到的奇BUG，差点就想放弃了。           </p>
<p>&nbsp;&nbsp;给大家分享经验的同时，纪念一次青春期似的莽撞的小悸动，回顾一次勇士般的除BUG路，或许这才<br>是我写下这篇文章的用意吧。</p>
<p>==========================</p>
<p>&nbsp;&nbsp;下面进入正文。</p>
<h2 id="申请github_账号。">申请<a href="https://github.com/" title="github" target="_blank" rel="external">github</a> 账号。</h2><p>这步非常的简单。                   </p>
<p>但是注意：           </p>
<blockquote>
<p>1.1：用户名首字母一定要小写！！！！大写的能注册，但是不能建立博客。<br>1.2: 邮箱一定要是能用的邮箱，github重要的信息都是通过邮件发给你的。 </p>
</blockquote>
<p><br>  </p>
<h2 id="建立github仓库。">建立github仓库。</h2><p>点击new就可以新建仓库。(在右上角头像的YourProfile个人主页里面)</p>
<p><img src="http://ww2.sinaimg.cn/mw690/68618da8gw1ewclzvtjbvj20kx07iglz.jpg" alt="仓库示例图"></p>
<p>这里要注意两点：</p>
<blockquote>
<p>2.1: 仓库名是  你的用户名.github.io,这是固定格式，不能改变。<br>2.2：注意不要写成大写了。          </p>
</blockquote>
<p>如果还有问题请参照这位同学写的：<a href="http://www.pchou.info/web-build/2013/01/05/build-github-blog-page-02.html" target="_blank" rel="external">一步步在GitHub上创建博客主页(2)</a></p>
<p>ps:点击桌面任何地方，鼠标右键就有gitbash选项,如果没有的话，在win的开机菜单栏下会有的。再没有就用搜索功能吧。        </p>
<br>

<h2 id="安装软件。">安装软件。</h2><p>依次下载安装。</p>
<ul>
<li>1.<a href="https://nodejs.org/en/download/" target="_blank" rel="external">node.js</a></li>
<li>2.<a href="http://git-scm.com/" target="_blank" rel="external">git</a>     </li>
</ul>
<p><br>这里基本选默认选项安装就可以。             </p>
<p><br></p>
<h2 id="配置sshkey">配置sshkey</h2><p>详情可以看素封同学的教程，非常详细。<a href="http://cnfeat.com/blog/2014/05/10/how-to-build-a-blog/\#ssh-keys-1" target="_blank" rel="external">配置sshkey</a><br>或者beiyuu同学的教程。<a href="http://beiyuu.com/github-pages/" target="_blank" rel="external">使用Github Pages建独立博客</a><br>如果你看得懂英文，github的官方文档是最好懂的。 <a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">Generating SSH keys</a>        </p>
<p>这里注意两点：         </p>
<blockquote>
<p>4.1:输入密码的时候命令行是没有东西的，你的键盘没有问题<br>4.2:拿到sshkey还有个简单的方法，打开gitgui,帮助下面有个showsshkey。<br>4.3：务必一字不错地复制到github，不然会链接不上<br>4.4：SSH文件一般是在c盘的user（win10是用户）文件夹下有个.ssh文件夹，找不到可以直接搜索.ssh,                </p>
</blockquote>
<p><br></p>
<h2 id="安装HEXO">安装HEXO</h2><p>详情看赵伟同学的教程。很简单。只要几个命令就可以了。<br><a href="http://zipperary.com/2013/05/28/hexo-guide-2/" target="_blank" rel="external">hexo系列教程：（二）搭建hexo博客</a>         </p>
<p>在这里要注意几个事情：      </p>
<blockquote>
<p>5.1:现在版本的deploy文件的type都不写github了，改成git了<br>5.2:hexo generate 还有 hexo deploy 可以用hexo g 和 hexo d 代替<br>5.3:deploy文件的repository建议写成 git@github.com:你的用户名/你的用户名.github.io.git，这样就不用每次deploy都写账户和密码了。<br>5.4:所有的hexo操作都必须在hexo的文件夹中进行，不然无效。在hexo文件夹下右键gitbash就行                          </p>
</blockquote>
<p><br></p>
<h2 id="配置和使用HEXO">配置和使用HEXO</h2><p>详情请看赵伟同学系列的教程。<a href="http://zipperary.com/2013/05/29/hexo-guide-3/" target="_blank" rel="external">hexo系列教程：（三）搭建hexo博客</a> </p>
<p><br></p>
<h2 id="克隆别人的主题">克隆别人的主题</h2><p>hexo有很多好看的主题呢。详情请看：<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">Hexo themes</a>             </p>
<p><a href="https://hexo.io/zh-cn/docs/themes.html" target="_blank" rel="external">hexo主题推荐</a>           </p>
<p>比如说在桌面右键gitbash，再输入(在哪里gitbash就是把项目克隆到哪里)      </p>
<blockquote>
<p>$ git clone  项目地址(每个仓库的右下角都有地址，点击HTTPS clone URL那个小图标，就成功复制地址了)              </p>
</blockquote>
<p>举个例子：</p>
<blockquote>
<p>$ git clone <a href="https://github.com/doesnta/doesnta.github.io.git" target="_blank" rel="external">https://github.com/doesnta/doesnta.github.io.git</a><br>这个就是复制的我的仓库。注意，前面的$不用复制。                         </p>
</blockquote>
<p>然后把下下来的文件夹复制到hexo的theme文件夹下。把hexo下面config.yml(注意是hexo下面的，不是主题文件夹下面的那个)theme 属性改为你要替换的主题的文件夹名。</p>
<blockquote>
<p>7.1:修改config文件一定要注意，属性后面写值都要空格，不要deploy会报错。<br>7.2:更换主题后删除.deploy_git还有db.json文件，重新再hexo g 然后hexo d,不然会出错<br>7.3:对内容进行更改之后都需要重新hexo g 然后hexo d 才有效果，如果只是本地测试的话不需要。<br>7.4:上传内容后github需要一两分钟反应，稍等一下。           </p>
</blockquote>
<p><br></p>
<h2 id="我遇到的两个千年难遇的bug">我遇到的两个千年难遇的bug</h2><p>&nbsp;&nbsp;说是千年难遇一点都不夸张，第一个完全不知道咋回事，错误信息是：    </p>
<blockquote>
<p> socket operation on non-socket         </p>
</blockquote>
<p>&nbsp;&nbsp;我现在都能流利地背下来！！！google完全google不到任何东西，第一时间Email给了github的员工，他们竟然不知道的是什么玩意！！！猜测是我的端口被屏蔽（后面我知道不是这原因！）就这个问题搞了我整整三天，每天搞到凌晨两点多，头都大了，差点都想放弃。ssh删了一次又一次。             </p>
<p>&nbsp;&nbsp;后面我灵机一动，non-socket不就是指的没有socket的环境或者socket没有启动吗，我就谷歌了socket 初始化失败，结果！！！上天真的开眼了。找到了这篇<a href="http://blog.sciencenet.cn/blog-464042-773264.html" target="_blank" rel="external">2011年的文章</a>，cmd输入NETSH WINSOCK RESET 回车再重启竟然莫名其妙地好了。。。。。。                    </p>
<p>&nbsp;&nbsp;然而上天对我的优待还没有结束,sshkey一直美好，好的不得了，上传下载都试过了，完全没有问题，但是hexo deploy就报Permission denied (publickey)，还要我检查自己是不是有权限。       </p>
<blockquote>
<p>什么鬼，用git下载上传都没事，我怎么可能没有权限。</p>
</blockquote>
<p>&nbsp;&nbsp;这个问题又狠狠地砸了两天的宝贵时间，天天弄到两点。后来又莫名其妙给我搜到一个链接：就是这位<a href="http://www.cognize.me/2015/08/22/msysgiterror/" target="_blank" rel="external">可爱的博主的博文</a>        </p>
<p>&nbsp;&nbsp;如果你也遇到相同的问题，把GIT版本调到2.0以下就行。      </p>
<p>&nbsp;&nbsp;好了，最后，猪大家博客快乐^(<em>￣(oo)￣)^</em>),以后有机会再写HEXO的优化教程。           </p>
<br>        



<h2 id="推荐阅读">推荐阅读</h2><p><a href="http://cnfeat.com/blog/2014/05/10/how-to-build-a-blog/" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a>             </p>
<p><a href="http://zipperary.com/categories/hexo/" target="_blank" rel="external">赵伟同学HEXO教程系列</a>            </p>
<p><a href="http://www.pchou.info/tag.html#github-page" target="_blank" rel="external">一步步在GitHub上创建博客主页系列</a>                 </p>
<p><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">Hexo你的博客</a>        </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>&nbsp;&nbsp;一直苦于自己写的文章无处安放。但是囿于国内技术博客极其美丽和高雅的UI设计，一直不敢踏下那一步。之前就听过可以用github建博客，在网上偶见几个github建博客的教程，收藏了，记着，也念着。但是终究没有时间去做的。<br>]]>
    
    </summary>
    
      <category term="github" scheme="http://doesnta.com/tags/github/"/>
    
      <category term="hexo" scheme="http://doesnta.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://doesnta.com/categories/hexo/"/>
    
  </entry>
  
</feed>
